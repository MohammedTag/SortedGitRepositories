package com.task.remote.di.services.sortedGitRepositories.model

import com.task.domain.domain_module.sortedGitRepositories.models.Item

data class ItemResponse(
    val allow_forking: Boolean,
    val archive_url: String,
    val archived: Boolean,
    val assignees_url: String,
    val blobs_url: String,
    val branches_url: String,
    val clone_url: String,
    val collaborators_url: String,
    val comments_url: String,
    val commits_url: String,
    val compare_url: String,
    val contents_url: String,
    val contributors_url: String,
    val created_at: String,
    val default_branch: String,
    val deployments_url: String,
    val description: String,
    val disabled: Boolean,
    val downloads_url: String,
    val events_url: String,
    val fork: Boolean,
    val forks: Int,
    val forks_count: Int,
    val forks_url: String,
    val full_name: String,
    val git_commits_url: String,
    val git_refs_url: String,
    val git_tags_url: String,
    val git_url: String,
    val has_discussions: Boolean,
    val has_downloads: Boolean,
    val has_issues: Boolean,
    val has_pages: Boolean,
    val has_projects: Boolean,
    val has_wiki: Boolean,
    val homepage: String,
    val hooks_url: String,
    val html_url: String,
    val id: Int,
    val is_template: Boolean,
    val issue_comment_url: String,
    val issue_events_url: String,
    val issues_url: String,
    val keys_url: String,
    val labels_url: String,
    val language: String?,
    val languages_url: String,
    val license: LicenseResponse?,
    val merges_url: String,
    val milestones_url: String,
    val name: String,
    val node_id: String,
    val notifications_url: String,
    val open_issues: Int,
    val open_issues_count: Int,
    val owner: OwnerResponse,
    val private: Boolean,
    val pulls_url: String,
    val pushed_at: String,
    val releases_url: String,
    val score: Double,
    val size: Int,
    val ssh_url: String,
    val stargazers_count: Int,
    val stargazers_url: String,
    val statuses_url: String,
    val subscribers_url: String,
    val subscription_url: String,
    val svn_url: String,
    val tags_url: String,
    val teams_url: String,
    val topics: List<String>,
    val trees_url: String,
    val updated_at: String,
    val url: String,
    val visibility: String,
    val watchers: Int,
    val watchers_count: Int,
    val web_commit_signoff_required: Boolean
) {
    fun toDomain(): Item = Item(
        allowForking = allow_forking,
        archiveUrl = archive_url,
        archived = archived,
        assigneesUrl = assignees_url,
        blobsUrl = blobs_url,
        branchesUrl = branches_url,
        cloneUrl = clone_url,
        collaboratorsUrl = collaborators_url,
        commentsUrl = comments_url,
        commitsUrl = commits_url,
        compareUrl = compare_url,
        contentsUrl = contents_url,
        contributorsUrl = contributors_url,
        createdAt = created_at,
        defaultBranch = default_branch,
        deploymentsUrl = deployments_url,
        description = description,
        disabled = disabled,
        downloadsUrl = downloads_url,
        eventsUrl = events_url,
        fork = fork,
        forks = forks,
        forksCount = forks_count,
        forksUrl = forks_url,
        fullName = full_name,
        gitCommitsUrl = git_commits_url,
        gitRefsUrl = git_refs_url,
        gitTagsUrl = git_tags_url,
        gitUrl = git_url,
        hasDiscussions = has_discussions,
        hasDownloads = has_downloads,
        hasIssues = has_issues,
        hasPages = has_pages,
        hasProjects = has_projects,
        hasWiki = has_wiki,
        homepage = homepage,
        hooksUrl = hooks_url,
        htmlUrl = html_url,
        id = id,
        isTemplate = is_template,
        issueCommentUrl = issue_comment_url,
        issueEventsUrl = issue_events_url,
        issuesUrl = issues_url,
        keysUrl = keys_url,
        labelsUrl = labels_url,
        language = language?:"",
        languagesUrl = languages_url,
        license = license?.toDomain(),
        mergesUrl = merges_url,
        milestonesUrl = milestones_url,
        name = name,
        nodeId = node_id,
        notificationsUrl = notifications_url,
        openIssues = open_issues,
        openIssuesCount = open_issues_count,
        owner = owner.toDomain(),
        private = private,
        pullsUrl = pulls_url,
        pushedAt = pushed_at,
        releasesUrl = releases_url,
        score = score,
        size = size,
        sshUrl = ssh_url,
        stargazersCount = stargazers_count,
        stargazersUrl = stargazers_url,
        statusesUrl = statuses_url,
        subscribersUrl = subscribers_url,
        subscriptionUrl = subscription_url,
        svnUrl = svn_url,
        tagsUrl = tags_url,
        teamsUrl = teams_url,
        topics = topics,
        treesUrl = trees_url,
        updatedAt = updated_at,
        url = url,
        visibility = visibility,
        watchers = watchers,
        watchersCount = watchers_count,
        webCommitSignoffRequired = web_commit_signoff_required
    )
}